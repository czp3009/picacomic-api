plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
}

def ktorVersion = '1.2.6'
def slf4jVersion = '1.7.29'

group 'com.hiczp'
version '0.0.1'
description 'Call PicaComic API in Kotlin'

repositories {
    mavenCentral()
    maven { url("https://dl.bintray.com/kotlin/kotlinx/") }
    mavenLocal()
}

//kotlin
dependencies {
    api 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
}

//http
dependencies {
    // https://mvnrepository.com/artifact/com.hiczp/caeruleum
    api group: 'com.hiczp', name: 'caeruleum', version: '1.2.8'
    // https://mvnrepository.com/artifact/io.ktor/ktor-client-logging-jvm
    api group: 'io.ktor', name: 'ktor-client-logging-jvm', version: ktorVersion
    // https://mvnrepository.com/artifact/io.ktor/ktor-client-gson
    api group: 'io.ktor', name: 'ktor-client-gson', version: ktorVersion
}

//json
dependencies {
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    api group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    // https://mvnrepository.com/artifact/com.github.salomonbrys.kotson/kotson
    api group: 'com.github.salomonbrys.kotson', name: 'kotson', version: '2.5.0'
}

//log
dependencies {
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    api group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
}

//test
dependencies {
    // https://mvnrepository.com/artifact/io.ktor/ktor-client-cio
    testApi group: 'io.ktor', name: 'ktor-client-cio', version: ktorVersion
    //use this engine only for Proxy, remove it after ktor 1.3.x
    // https://mvnrepository.com/artifact/io.ktor/ktor-client-apache
    testApi group: 'io.ktor', name: 'ktor-client-apache', version: ktorVersion
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter
    testApi group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.5.2'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    testApi group: 'org.slf4j', name: 'slf4j-simple', version: slf4jVersion
}

test {
    useJUnitPlatform()
}

def javaVersion = JavaVersion.VERSION_1_8
def compilerArgs = ["-Xuse-experimental=kotlin.Experimental", "-XXLanguage:+InlineClasses"]

compileKotlin {
    kotlinOptions {
        jvmTarget = javaVersion
        freeCompilerArgs = compilerArgs
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = javaVersion
        freeCompilerArgs = compilerArgs
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}
